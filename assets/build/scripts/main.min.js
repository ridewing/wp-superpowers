var Ajax=function(){var e={controller:function(e,t,a,r){a.postId=_superData.postId,$.ajax({url:_superData.api,data:{controller:e,method:t,args:a},success:function(e){"function"==typeof r&&r(e.success,e)}})}};return e},Group=function(){var e={add:function(e,t){SuperPowers.ajax.controller(_superData.controller,"addGroup",{groupId:e},function(a,r){a&&$("#"+e).find(".inside .super-group-content").last().after(r.data),t()})},remove:function(t,a){var r=$("#"+t).find(".super-group-content").eq(a);r.addClass("removed"),window.setTimeout(function(){r.remove(),e.updateGroupIndexes(t)},500)},updateGroupIndexes:function(e){var t=$("#"+e).find(".super-group-content");t.each(function(e,t){$(t).find(".controlls .number").text(e+1);var a=$(t).find(".superpower-property-value");a.each(function(t,a){var r=$(a).data("name");$(a).attr("name",r.replace("%index%",e)),$(a).attr("id",r.replace("%index%",e))})})},moveItemUp:function(t){var a=t.prev();a.length&&(t.addClass("move-up"),a.addClass("move-down"),window.setTimeout(function(){t.removeClass("move-up"),a.removeClass("move-down");var r=t.detach();a.before(r),e.updateGroupIndexes(t.data("id"))},350))},moveItemDown:function(t){var a=t.next();a.length&&(t.addClass("move-down"),a.addClass("move-up"),window.setTimeout(function(){t.removeClass("move-down"),a.removeClass("move-up");var r=t.detach();a.after(r),e.updateGroupIndexes(t.data("id"))},350))}};return $(".super-group-add").on("click",function(t){t.preventDefault();var a=Ladda.create($(this)[0]);a.start(),e.add($(this).attr("id"),function(){a.stop()})}),$(".super-group-wrapper").on("click",".super-group-content .button-remove",function(t){t.preventDefault(),e.remove($(this).data("id"),$(this).parents(".super-group-content:first").index(),function(){})}),$(".super-group-wrapper").on("click",".super-group-content .controlls .controll",function(t){t.preventDefault();var a=$(this).parents(".super-group-content:first");$(this).hasClass("controll-up")?e.moveItemUp(a):$(this).hasClass("controll-down")&&e.moveItemDown(a)}),e},SuperPowers,App=function(){var e={};return e.ajax=Ajax(),e.group=Group(),e.property={image:Image,slider:Slider},e};$(document).ready(function(){SuperPowers=App()});var Image=function(e){function t(e,t,a,r,o){var n=e/t,i=a/r,u={};if(!o&&i>n||o&&n>i){var d=t/e,s=a*d;u.size={top:-Math.round((s-r)/2),left:0,width:a,height:Math.round(s)},u.ratio=d}else{var p=e/t,l=r*p;u.size={top:0,left:-Math.round((l-a)/2),width:Math.round(l),height:r},u.ratio=p}return u}if("undefined"!=typeof e){var a=e.find(".superpower-image-size-default"),r=a.data("size").split("x"),o=({width:r[0],height:r[1]},{width:0,height:0}),n=wp.media({title:"Select Image",multiple:!1,library:{type:"image"},button:{text:"Add image"}}),i={boot:function(){o=i.scaleImage(a),e.find(".superpower-image:not(.superpower-image-size-default)").each(function(){i.scaleImage($(this))});var t=e.find(".superpower-property-attachment").val();t.length&&(t=JSON.parse(t),i.attachImage(t))},size:function(e,t){return{width:e,height:t}},getImageSizeProperty:function(e){var t=e.data("size").split("x");return i.size(t[0],t[1])},getImageSizeScaled:function(e){return e.data("scaled")},removeImage:function(){e.find(".superpower-property-value").val(""),e.removeClass("has-image")},scaleImage:function(e){var t=i.getImageSizeProperty(e),a=1,r=300,o=300;if(t.width>t.height&&t.width>r){var n=Math.min(r,t.width);a=n/t.width}else if(t.height>o){var u=Math.min(o,t.height);a=u/t.height}var n=Math.round(t.width*a),u=Math.round(t.height*a);return e.css(i.size(n,u)),e.data("scaled",i.size(n,u)),i.size(n,u)},openDialog:function(e){n.open();var t=n.uploader;t.uploader&&t.uploader.ready?t.uploader.uploader.addFile(_.toArray(e)):n.on("uploader:ready",function(){t.uploader.uploader.addFile(_.toArray(e))})},attachImage:function(t){e.addClass("has-image"),e.find(".superpower-property-value").val(JSON.stringify({id:t.id})),e.find(".superpower-image").each(function(){i.setImage($(this),t)})},setImage:function(e,a){e.find(".image-view").attr("src",a.url);var r=i.getImageSizeScaled(e),o=t(a.width,a.height,r.width,r.height);e.find(".image-view").css(o.size)}};return e.on(".image-remove-button").on("click",function(e){e.preventDefault(),i.removeImage()}),a.on("drop",function(e){e.preventDefault();var t=event.dataTransfer.files;$(this).removeClass("file-hover"),i.openDialog(t)}),a.on("click",function(e){e.preventDefault(),i.openDialog()}),n.on("select",function(){var e=n.state().get("selection").first().toJSON();i.attachImage(e)}),a.on("dragover",function(e){e.preventDefault(),$(this).addClass("file-hover")}),i.boot(),i}},Slider=function(e,t){var a={boot:function(){$(e).slider({min:0,max:10,range:"min",value:2*t,slide:function(t,a){var r=a.value/2;e.find(".superpower-property-value").val(r),e.prev().find("span").text(r.toFixed(1))}})}};a.boot()};
//# sourceMappingURL=data:application/json;base64,